#zqzess configure
#Update Date: 2022.11.21 12:19:30 +0000
#author: zqzess

[General]
ipv6 = false
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# [DNS] => DNS 服务器
dns-server = system,119.29.29.29,114.114.114.114,223.5.5.5,8.8.8.8
allow-udp-proxy = false
# Wi-Fi 访问
# > 允许 Wi-Fi 网络下其它设备访问
allow-wifi-access = true
wifi-access-http-port = 7222
wifi-access-socks5-port = 7221
# > 代理测速 URL
proxy-test-url = http://www.qualcomm.cn/generate_204
# > 测速超时 (s)
test-timeout = 3
interface-mode = auto
# > 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
# 解析器
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/scripts/sub-store-parser.js
# ssid-trigger参数，用于指定SSID下流量模式切换，（default表示默认，cellular表示蜂窝，目前支持三种值：rule，direct，proxy） 
# ssid-trigger="default":rule,"cellular":rule,"ASUS":direct,"TPLINK":proxy 


[Proxy]
# 内置 DIRECT、REJECT 策略
# 内置 PROXY 指向本地节点或者订阅节点中的任何一个（有本地节点默认指向第一个本地节点，当没有本地节点但有订阅节点时，指向第一个订阅的第一个节点，本地节点和订阅节点都不存在时指向DIRECT）

#ss
#ss1 = Shadowsocks,example.com,443,aes-128-gcm,"password",fast-open=false,udp=true
#ss2 = Shadowsocks,example2.com,443,chacha20,"password",fast-open=true,udp=true
#ss+simple obfs
#ssObfs1 = Shadowsocks,example.com,80,aes-128-gcm,"password",obfs-name=http,obfs-host=www.micsoft.com,fast-open=true,udp=true
#ssObfs2 = Shadowsocks,example.com,443,aes-128-gcm,"password",obfs-name=tls,obfs-host=www.micsoft.com,fast-open=true,udp=true

#ssr
# 节点名称 = 协议，服务器地址，端口，加密方式，密码，obfs-name，{obfs-params}，protocol-name，{protocols-param}
#ssr1 = ShadowsocksR,example.com,443,aes-256-cfb,"password",orig,{},http_simple,{download.windows.com},fast-open=false,udp=true
#ssr2 = ShadowsocksR,example.com,10076,aes-128-cfb,"password",auth_chain_a,{9555:loon},http_post,{download.windows.com},fast-open=false,udp=true
#ssr3 = ShadowsocksR,example.com,10076,chacha20,"password",auth_aes128_md5,{9555:loon},tls1.2_ticket_auth,{download.windows.com},fast-open=false,udp=true
#ssr4 = ShadowsocksR,example.com,10076,chacha20-ietf,"password",auth_aes128_sha1,{9555:loon},plain,{},fast-open=false,udp=true

#http
#http1 = http,example.com,80
#http2 = http,example.com,80,username,"password"

#https
#https1 = https,example.com,443
#https2 = https,example.com,443,username,"password"
#https3 = https,example.com,443,username,"password",skip-cert-verify:true,tls-name:example.com

#vmess+tcp
# 节点名称 = 协议，服务器地址，端口，加密方式，UUID，传输方式:(tcp/ws),path：websocket握手header中的path，host：websocket握手header中的path，over-tls:是否tls，tls-name：tls名字，skip-cert-verify：是否跳过证书校验（默认否）
#vmess1 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:tcp,path:/,host:v3-dy-y.ixigua.com,over-tls:false
#vmess+tcp+tls
#vmess2 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:tcp,path:/,host:v3-dy-y.ixigua.com,over-tls:true,tls-name:example.com,skip-cert-verify:true
#vmess+ws
#vmess3 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:ws,path:/,host:v3-dy-y.ixigua.com,over-tls:false
#vmess+wss
#vmess4 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:ws,path:/,host:v3-dy-y.ixigua.com,over-tls:true,tls-name:example.com,skip-cert-verify:true
#trojan
#trojan1 = trojan,example.com,443,"password",skip-cert-verify:false,tls-name:example.com
#trojan2 = trojan,example.com,443,"password",skip-cert-verify:true,tls-name:example.com

[Remote Proxy]
# 订阅节点
# 别名 = 订阅URL
#Subs = https://example/server-complete.txt
#Subs2 = https://example2/server-complete.txt

[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
#Netflix = NodeSelect,Subs
#Hulu = NameKeyword,Subs,Subs2,FilterKey = Hulu
#HK = NameRegex,Subs,FilterKey = *HK
香港 = NameRegex, FilterKey = "(?i)(港|HK|Hong)"
台湾 = NameRegex, FilterKey = "(?i)(台|TW|Tai)"
日本 = NameRegex, FilterKey = "(?i)(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan)"
韩国 = NameRegex, FilterKey = "(?i)(KR|Korea|KOR|首尔|韩|韓)"
美国 = NameRegex, FilterKey = "(?i)(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States)"
新加坡 = NameRegex, FilterKey = "(?i)(新加坡|坡|狮城|SG|Singapore)"
俄罗斯 = NameRegex, FilterKey = "(?i)(俄罗斯|俄|俄国|RU|Russia)"

[Proxy Group]
# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto = url-test,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# fallback模式，和url-test类似，不同的是会根据顺序返回第一个可用的节点，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto1 = fallback,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# 别名 = ssid，默认 = 策略， 蜂窝 = 策略， ssid名称 = 策略
#SSID = ssid, default = PROXY, cellular = DIRECT, "DivineEngine" = PROXY
#负载均衡，可选三种算法：random：随机选择策略组可用节点，round-robin：轮询策略组可用节点，pcc：在random基础上，针对相同host使用同一节点，此处url用来测试节点可用性，每隔interval进行一次测速，max-timeout参数用于筛选测试时间超过max-timeout的节点为不可用节点
#LoadBalance = load-balance,node1,node2,remoteNodes, url = http://bing.com, interval = 600,algorithm = pcc, max-timeout=3000
# 广告模式
#Advertising = select,REJECT,DIRECT
# 白名单模式 PROXY，黑名单模式 DIRECT
#Final = select,PROXY,DIRECT

# 节点选项
自动选择 = url-test,clash,WARP,url = http://www.qualcomm.cn/generate_204,interval = 600,tolerance = 50,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Round_Robin.png
#自定义
OpenAI = url-test,日本,新加坡,美国,url = http://www.qualcomm.cn/generate_204,interval = 600,tolerance = 50,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Rocket.png
广告屏蔽 = select,REJECT,DIRECT,自动选择,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Reject.png
Spotify = select,台湾,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
节点选择 = select,自动选择,WARP,台湾,日本,香港,美国,新加坡,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Bypass.png
# 白名单模式 PROXY，黑名单模式 DIRECT
[Rule]
DOMAIN-KEYWORD,ccemby,自动选择
DOMAIN-KEYWORD,jmsoo,自动选择
DOMAIN-KEYWORD,speedtest,节点选择
#本地规则
# Local RULE
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
# Strategy:DIRECT,Proxy,REJECT
# Options:force-remote-dns(Default:false),no-resolve
#DOMAIN,google.com,PROXY
DOMAIN-KEYWORD,announce,DIRECT
DOMAIN-KEYWORD,torrent,DIRECT
DOMAIN-KEYWORD,tracker,DIRECT
DOMAIN-SUFFIX,smtp,DIRECT
URL-REGEX,(Subject|HELO|SMTP),DIRECT
IP-CIDR,1.1.1.1/24,DIRECT
# GeoIP China
GEOIP,CN,DIRECT
FINAL,DIRECT

[Remote Rule]
https://github.com/zqzess/rule_for_quantumultX/blob/master/Surge/List/AdBlock.list?raw=true, policy=广告屏蔽, tag=广告, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Olevod/Olevod.list, policy=自动选择, tag=Olevod.list, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/OpenAI/OpenAI.list, policy=OpenAI, tag=OpenAI.list, enabled=true
# Remote Rule
# 订阅规则URL,策略
# PROXY
#https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rule/ExampleRule.list,policy=PROXY,enabled=false
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Apple/Apple.list, policy=DIRECT, tag=苹果, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/Netflix/Netflix.list, policy=自动选择, tag=Netflix, enabled=false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/YouTube/YouTube.list, policy=自动选择, tag=YuTube, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/Telegram/Telegram.list, policy=自动选择, tag=Telegram, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/Extra/PayPal.list, policy=自动选择, tag=PayPal, enabled=true
https://raw.githubusercontent.com/ypZhang-2020/Loon/main/%E5%9B%BD%E5%A4%96%E5%9F%9F%E5%90%8D, policy=自动选择, tag=国外域名, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Music/Spotify.list, policy=Spotify, tag=Spotify, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Surge/GlobalMedia/GlobalMedia.list, policy=自动选择, tag=国外媒体, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/StreamingMedia/StreamingSE.list, policy=DIRECT, tag=bilibili, enabled=true

https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Ruleset/China.list, policy=DIRECT, tag=大陆, enabled=true


[Host]
*.taobao.com = server:223.5.5.5
*.tmall.com = server:223.5.5.5
*.alipay.com = server:223.5.5.5
*.alicdn.com = server:223.5.5.5
*.aliyun.com = server:223.5.5.5
*.jd.com = server:119.28.28.28
*.qq.com = server:119.28.28.28
*.tencent.com = server:119.28.28.28
*.weixin.com = server:119.28.28.28
*.bilibili.com = server:119.29.29.29
hdslb.com = server:119.29.29.29
*.163.com = server:119.29.29.29
*.126.com = server:119.29.29.29
*.126.net = server:119.29.29.29
*.127.net = server:119.29.29.29
*.netease.com = server:119.29.29.29
*.mi.com = server:119.29.29.29
*.xiaomi.com = server:119.29.29.29

[URL Rewrite]
enable = true
# Redirect Google Search Service
#^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

[Remote Rewrite]
# 订阅 URL Rewrite
# 订阅url,别名(可选)
https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list, tag=auto(Loon自带), enabled=false

[Script]
enable = true
# http-request 处理请求的脚本
# http-response 处理请求响应的脚本
# cron 定时脚本
# network-changed   网络发生变化触发脚本

# http-request ^https?:\/\/(www.)?(example)\.com script-path=localscript.js,tag = requestScript,enable=true
# http-response ^https?:\/\/(www.)?(example)\.com script-path=https://example.com/loon.js,timeout=10,requires-body = true,tag = responseScript,enable=true
# cron "0 8 * * *" script-path=cron.js,tag = responseScript,enable=true

network-changed script-path=https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Script/netChanged.js, timeout=300, enabled=false, tag=changeModel(Loon自带)

[Remote Script]
# https://example.com/loon.js, tag=scripts, enable=true

[Plugin]
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/YouTube_remove_ads.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/BingAI.plugin, policy=自动选择, enabled=true
# plugin-url tag=tag,proxy=插件中PROXY所指向的策略,enable=true
# plugin策略可设置为DIRECT,REJECT,PROXY，其中PROXY为用户在app中手动映射的策略，rule后不跟随策略默认使用PROXY
# example: https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=boxjs,enable=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/Node_detection_tool.plugin, enabled=true
https://raw.githubusercontent.com/ClydeTime/BiliBili/main/modules/BiliBiliDailyBonus.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/NodeLinkCheck.Plugin, enabled=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/skip-proxy.plugin, enabled=true
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/CamScanner.plugin, enabled=true
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/colorweather.plugin, enabled=true
https://raw.githubusercontent.com/app2smile/rules/master/plugin/spotify.plugin, enabled=true
https://raw.githubusercontent.com/sub-store-org/Sub-Store/master/config/Loon.plugin, policy=自动选择, enabled=true
https://raw.githubusercontent.com/VirgilClyne/Cloudflare/main/modules/Cloudflare.1.1.1.1.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/LoonGallery.plugin, policy=自动选择, enabled=true

https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/Rewrite.plugin, enabled=true

https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/ReFix.plugin, policy=自动选择, tag=规则修正, enabled=true

https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/Qsearch.plugin, policy=Outside, tag=safari聚合搜索百度引擎, enabled=true

https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/AdBlock.plugin, policy=Outside, tag=zqzess自用广告屏蔽插件, enabled=true



https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/bilibili.plugin, policy=Outside, tag=Bilibili增强插件, enabled=true

https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Loon/Plugin/zhihu.plugin, policy=Outside, tag=知乎增强插件, enabled=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Unlock/TikTokUS.plugin, policy=美国节点, tag=tiktok美区, enabled=false



[MITM]
ca-p12 = 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
ca-passphrase = B0L8GU21
hostname =
enable = true
skip-server-cert-verify = true
#ca-p12 =
#ca-passphrase =